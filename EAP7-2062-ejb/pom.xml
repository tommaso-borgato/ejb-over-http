<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.example</groupId>
        <artifactId>EAP7-2062</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>EAP7-2062-ejb</artifactId>
    <packaging>ejb</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <version.wildfly.maven.plugin>2.0.0.Final</version.wildfly.maven.plugin>
        <version.server.bom>28.0.1.Final</version.server.bom>
        <version.maven.war.plugin>3.4.0</version.maven.war.plugin>


        <wildfly-eap8.version>28.0.1.Final</wildfly-eap8.version>
        <version.wildfly-jar-maven-plugin>8.0.1.Final</version.wildfly-jar-maven-plugin>
        <wildfly-eap8.feature-pack.location>org.wildfly:wildfly-galleon-pack:${wildfly-eap8.version}</wildfly-eap8.feature-pack.location>
        <!-- WildFly/EAP 8 Maven Plugin coordinates -->
        <wildfly-maven-plugin.groupId>org.wildfly.plugins</wildfly-maven-plugin.groupId>
        <wildfly-maven-plugin.artifactId>wildfly-maven-plugin</wildfly-maven-plugin.artifactId>
        <wildfly-maven-plugin.version>4.2.0.Alpha1</wildfly-maven-plugin.version>
        <wildfly-eap8.cloud-feature-pack.location>org.wildfly.cloud:wildfly-cloud-galleon-pack:3.0.0.Final</wildfly-eap8.cloud-feature-pack.location>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.wildfly.bom</groupId>
                <artifactId>wildfly-ee-with-tools</artifactId>
                <version>${version.server.bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>jakarta.ejb</groupId>
            <artifactId>jakarta.ejb-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!--<dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>EAP7-2062-common</artifactId>
        </dependency>-->
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-ejb-plugin</artifactId>
                <version>3.2.1</version>
                <configuration>
                    <ejbVersion>3.2</ejbVersion>
                </configuration>
            </plugin>
            <!-- we want to include classes with interfaces shared between client and server -->
            <!--<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.6.0</version>
                <executions>
                    <execution>
                        <id>unpack-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>EAP7-2062-common</artifactId>
                                    <type>jar</type>
                                    <includes>**/*.class,**/*.xml</includes>
                                    <outputDirectory>${project.build.directory}/classes</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>-->
            <!--<plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-jar-maven-plugin</artifactId>
                <version>${version.wildfly-jar-maven-plugin}</version>
                <configuration>
                    <feature-packs>
                        <feature-pack>
                            <location>${wildfly-eap8.feature-pack.location}</location>
                        </feature-pack>
                    </feature-packs>
                    <layers>
                        <layer>logging</layer>
                        <layer>jaxrs-server</layer>
                        <layer>elytron-oidc-client</layer>
                    </layers>
                </configuration>
            </plugin>-->
            <plugin>
                <groupId>${wildfly-maven-plugin.groupId}</groupId>
                <artifactId>${wildfly-maven-plugin.artifactId}</artifactId>
                <version>${wildfly-maven-plugin.version}</version>
                <!-- Use configuration from parent and append specific configuration for project - layers, cli,...-->
                <configuration>

                    <!-- TODO: remove, is only needed for manual experimentation -->
                    <!--<javaOpts>-Djboss.socket.binding.port-offset=100</javaOpts>-->

                    <feature-packs>
                        <feature-pack>
                            <location>${wildfly-eap8.feature-pack.location}</location>
                        </feature-pack>
                        <feature-pack>
                            <location>${wildfly-eap8.cloud-feature-pack.location}</location>
                        </feature-pack>
                    </feature-packs>
                    <layers>
                        <layer>logging</layer>
                        <layer>jaxrs-server</layer>
                        <layer>elytron-oidc-client</layer>
                        <layer>ejb</layer>
                        <layer>ejb-http-invoker</layer>
                    </layers>
                    <!-- <filename>ROOT.war</filename> -->
                    <!--
                        Both the Bootable JAR and Maven plugin are executed on some cases and their executions
                        might collide. Let's isolate the WildFly/EAP Maven plugin execution to be safe
                    -->
                    <galleon-options>
                        <jboss-fork-embedded>true</jboss-fork-embedded>
                    </galleon-options>
                    <packaging-scripts>
                        <execution>
                            <commands>
                                <command>/socket-binding-group=standard-sockets:write-attribute(name=port-offset,value=100)</command>
                            </commands>
                        </execution>
                    </packaging-scripts>
                    <!-- <packaging-scripts>
                        <execution>
                            <commands>
                                <command>/subsystem=keycloak/secure-deployment="${project.build.finalName}.war"/:add( \
                                realm="${env.TEST_SSO_REALM}", \
                                resource="${project.build.finalName}", \
                                auth-server-url=${env.TEST_SSO_ROUTE}/, \
                                ssl-required=EXTERNAL)</command>
                                <command>/subsystem=keycloak/secure-deployment="${project.build.finalName}.war"/credential=secret:add(value=${env.TEST_SSO_CLIENT_SECRET})</command>
                            </commands>
                        </execution>
                    </packaging-scripts> -->
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>package</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>